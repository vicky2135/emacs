"da39a3ee5e6b4b0d3255bfef95601890afd80709"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("package session

import (
	redis \"github.com/chasex/redis-go-cluster\"
	\"github.com/gorilla/securecookie\"
	\"github.com/gorilla/sessions\"
)

type store struct {
	*RedisStore
}

func (c *store) Options(options sessions.Options) {
	c.RedisStore.Options = &sessions.Options{
		Path:     options.Path,
		Domain:   options.Domain,
		MaxAge:   options.MaxAge,
		Secure:   options.Secure,
		HttpOnly: options.HttpOnly,
	}
}

func NewRedisStore(conn *redis.Cluster, keyPairs ...[]byte) *RedisStore {

	rs := &RedisStore{
		conn:   conn,
		Codecs: securecookie.CodecsFromPairs(keyPairs...),
		Options: &sessions.Options{
			Path:   \"/\",
			MaxAge: sessionExpire,
		},
		DefaultMaxAge: 24 * 60 * 60,
		keyPrefix:     \"session_\",
	}

	return rs
}
" 0 7 (fontified t face font-lock-keyword-face) 7 8 (fontified t) 8 16 (fontified t) 16 17 (fontified t) 17 23 (fontified t face font-lock-keyword-face) 23 26 (fontified t) 26 27 (fontified t face whitespace-tab) 27 33 (fontified t) 33 69 (fontified t face font-lock-string-face) 69 70 (fontified t) 70 71 (fontified t face whitespace-tab) 71 104 (fontified t face font-lock-string-face) 104 105 (fontified t) 105 106 (fontified t face whitespace-tab) 106 135 (fontified t face font-lock-string-face) 135 138 (fontified t) 138 139 (fontified t) 139 143 (fontified t face font-lock-keyword-face) 143 144 (fontified t) 144 149 (fontified t face font-lock-type-face) 149 150 (fontified t) 150 156 (fontified t face font-lock-keyword-face) 156 159 (fontified t) 159 160 (fontified t face whitespace-tab) 160 161 (fontified t) 161 171 (fontified t) 171 172 (fontified t) 172 174 (fontified t) 174 175 (fontified t) 175 179 (fontified t face font-lock-keyword-face) 179 184 (fontified t) 184 189 (fontified t face font-lock-type-face) 189 191 (fontified t) 191 198 (fontified t face font-lock-function-name-face) 198 207 (fontified t) 207 223 (fontified t face font-lock-type-face) 223 227 (fontified t) 227 228 (fontified t face whitespace-tab) 228 230 (fontified t) 230 241 (fontified t) 241 261 (fontified t) 261 268 (fontified t face font-lock-type-face) 268 270 (fontified t) 270 272 (fontified t face whitespace-tab) 272 276 (fontified t face font-lock-constant-face) 276 296 (fontified t) 296 298 (fontified t face whitespace-tab) 298 304 (fontified t face font-lock-constant-face) 304 324 (fontified t) 324 326 (fontified t face whitespace-tab) 326 332 (fontified t face font-lock-constant-face) 332 341 (fontified t) 341 352 (fontified t) 352 354 (fontified t face whitespace-tab) 354 360 (fontified t face font-lock-constant-face) 360 380 (fontified t) 380 381 (fontified t face whitespace-tab) 381 382 (fontified t face whitespace-tab) 382 390 (fontified t face font-lock-constant-face) 390 410 (fontified t) 410 411 (fontified t face whitespace-tab) 411 412 (fontified t) 412 413 (fontified t) 413 414 (fontified t) 414 415 (fontified t) 415 416 (fontified t) 416 420 (fontified t face font-lock-keyword-face) 420 421 (fontified t) 421 434 (fontified t face font-lock-function-name-face) 434 435 (fontified t) 435 437 (fontified t) 437 439 (fontified t) 439 441 (fontified t) 441 447 (fontified t face font-lock-type-face) 447 454 (fontified t face font-lock-type-face) 454 456 (fontified t) 456 468 (fontified t) 468 469 (fontified t) 469 470 (fontified t) 470 474 (fontified t face font-lock-type-face) 474 477 (fontified t) 477 487 (fontified t face font-lock-type-face) 487 488 (fontified t) 488 490 (fontified t) 490 491 (fontified t) 491 492 (fontified t face whitespace-tab) 492 499 (fontified t) 499 509 (fontified t face font-lock-type-face) 509 511 (fontified t) 511 513 (fontified t face whitespace-tab) 513 517 (fontified t face font-lock-constant-face) 517 527 (fontified t) 527 529 (fontified t face whitespace-tab) 529 535 (fontified t face font-lock-constant-face) 535 537 (fontified t) 537 550 (fontified t) 550 565 (fontified t face font-lock-function-name-face) 565 566 (fontified t) 566 577 (fontified t) 577 580 (fontified t) 580 582 (fontified t face whitespace-tab) 582 589 (fontified t face font-lock-constant-face) 589 592 (fontified t) 592 601 (fontified t) 601 608 (fontified t face font-lock-type-face) 608 610 (fontified t) 610 613 (fontified t face whitespace-tab) 613 617 (fontified t face font-lock-constant-face) 617 621 (fontified t) 621 624 (fontified t face font-lock-string-face) 624 626 (fontified t) 626 629 (fontified t face whitespace-tab) 629 635 (fontified t face font-lock-constant-face) 635 637 (fontified t) 637 639 (fontified t) 639 651 (fontified t) 651 652 (fontified t) 652 654 (fontified t face whitespace-tab) 654 657 (fontified t) 657 659 (fontified t face whitespace-tab) 659 672 (fontified t face font-lock-constant-face) 672 688 (fontified t) 688 690 (fontified t face whitespace-tab) 690 699 (fontified t face font-lock-constant-face) 699 705 (fontified t) 705 715 (fontified t face font-lock-string-face) 715 717 (fontified t) 717 718 (fontified t face whitespace-tab) 718 720 (fontified t) 720 721 (fontified t) 721 722 (fontified t face whitespace-tab) 722 728 (fontified t face font-lock-keyword-face) 728 731 (fontified t) 731 732 (fontified t) 732 733 (fontified t) 733 734 (fontified t)) . 1) (undo-tree-id92 . -734) (undo-tree-id93 . -733) (undo-tree-id94 . -734) (undo-tree-id95 . -15) (undo-tree-id96 . -15) (undo-tree-id97 . -15) (undo-tree-id98 . -175) (undo-tree-id99 . -175) (undo-tree-id100 . -175) (undo-tree-id101 . -17) (undo-tree-id102 . -175) (undo-tree-id103 . -175) (undo-tree-id104 . -268) (undo-tree-id105 . -268) (undo-tree-id106 . -412) (undo-tree-id107 . -208) (undo-tree-id108 . -208) (undo-tree-id109 . -416) (undo-tree-id110 . -15) (undo-tree-id111 . -733) (undo-tree-id112 . -733) (undo-tree-id113 . -733) (undo-tree-id114 . -734) (undo-tree-id115 . -416) (undo-tree-id116 . -734) (undo-tree-id117 . -734) (undo-tree-id118 . -734) (t 23301 17853 628297 219000)) nil (23301 18279 466841 0) 0 nil]) ((18 . 139) (#("import \"github.com/gorilla/sessions\"
" 0 6 (fontified t face font-lock-keyword-face) 6 7 (fontified t) 7 36 (fontified t face font-lock-string-face) 36 37 (fontified t)) . -18) (650 . 651)) nil (23301 17853 624563 0) 0 nil]) ((333 . 650)) nil (23301 17853 624571 0) 0 nil]) ((332 . 333) (t 23301 17832 319285 356000)) nil (23301 17853 624576 0) 0 nil]) ((131 . 132) (t 23301 17802 519220 569000)) nil (23301 17832 314752 0) 0 nil]) ((92 . 143) (#("func (c *store) Options (options session.Options) {
" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 6 (fontified t) 6 7 (fontified t) 7 9 (fontified t) 9 14 (fontified t face font-lock-type-face) 14 16 (fontified t) 16 23 (fontified t face font-lock-function-name-face) 23 24 (fontified t) 24 25 (fontified t) 25 32 (fontified t) 32 33 (fontified t) 33 41 (fontified t face font-lock-type-face) 41 48 (fontified t face font-lock-type-face) 48 50 (fontified t) 50 52 (fontified t)) . -92) (undo-tree-id19 . -25) (undo-tree-id20 . -25) (undo-tree-id21 . -25) (undo-tree-id22 . -25) (undo-tree-id23 . -25) (18 . 76) (#("type store struct  {
" 0 4 (fontified t face font-lock-keyword-face) 4 5 (fontified t) 5 10 (fontified t face font-lock-type-face) 10 11 (fontified t) 11 17 (fontified t face font-lock-keyword-face) 17 19 (fontified t) 19 21 (fontified t)) . -18) (undo-tree-id24 . -11) (294 . 295) 175) nil (23301 17802 515037 0) 0 nil]) ((148 . 292)) nil (23301 17802 515046 0) 0 nil]) ((#("{
		
	}" 0 2 (fontified t) 2 4 (fontified t face whitespace-trailing) 4 5 (fontified t) 5 6 (fontified t face whitespace-tab) 6 7 (fontified t)) . 148) (undo-tree-id25 . -4) (undo-tree-id26 . -7) (undo-tree-id27 . -4) (undo-tree-id28 . 7) (undo-tree-id29 . -1) (undo-tree-id30 . 1) (undo-tree-id31 . -7) (undo-tree-id32 . -7) (undo-tree-id33 . -7) (undo-tree-id34 . -7) (undo-tree-id35 . -7)) nil (23301 17802 515067 0) 0 nil]) ((150 . 152)) nil (23301 17802 515071 0) 0 nil]) ((151 . 152) (#("		" 0 2 (fontified nil)) . 150) (150 . 152) (#("	" 0 1 (fontified nil face whitespace-tab)) . -150) (undo-tree-id36 . -1) (149 . 152)) nil (23301 17802 515077 0) 0 nil]) ((148 . 150) (#("{" 0 1 (fontified nil)) . -148) (148 . 149)) nil (23301 17802 515084 0) 0 nil]) ((#("(" 0 1 (fontified nil)) . -148) (undo-tree-id37 . -1) (#(")" 0 1 (fontified t)) . 149)) nil (23301 17802 515091 0) 0 nil]) ((148 . 150) (#("(" 0 1 (fontified nil)) . -148) (148 . 149)) nil (23301 17802 515096 0) 0 nil]) ((141 . 148) (#("Op" 0 2 (fontified t)) . -141) (undo-tree-id38 . -2) 143) nil (23301 17802 515104 0) 0 nil]) ((137 . 143)) nil (23301 17802 515107 0) 0 nil]) ((#("n" 0 1 (fontified t)) . -137) (undo-tree-id39 . -1) 138) nil (23301 17802 515114 0) 0 nil]) ((135 . 138)) nil (23301 17802 515118 0) 0 nil]) ((#("i" 0 1 (fontified t)) . -135) (undo-tree-id40 . -1) (#("o" 0 1 (fontified t)) . -136) (undo-tree-id41 . -1) 137) nil (23301 17802 515130 0) 0 nil]) ((131 . 137)) nil (23301 17802 515135 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -131) (undo-tree-id42 . -1) 132) nil (23301 17802 515143 0) 0 nil]) ((131 . 132)) nil (23301 17802 515147 0) 0 nil]) ((#("&" 0 1 (fontified t)) . -131) (undo-tree-id43 . -1) (#("S" 0 1 (fontified t)) . -132) (undo-tree-id44 . -1) (#("e" 0 1 (fontified t)) . -133) (undo-tree-id45 . -1) 134) nil (23301 17802 515157 0) 0 nil]) ((133 . 134)) nil (23301 17802 515159 0) 0 nil]) ((131 . 133)) nil (23301 17802 515160 0) 0 nil]) ((#("*" 0 1 (fontified t)) . -131) (undo-tree-id46 . -1) 132) nil (23301 17802 515165 0) 0 nil]) ((131 . 132)) nil (23301 17802 515169 0) 0 nil]) ((#("*" 0 1 (fontified t)) . -131) (undo-tree-id47 . -1) 132) nil (23301 17802 515178 0) 0 nil]) ((128 . 132)) nil (23301 17802 515181 0) 0 nil]) ((121 . 128) (#("Op" 0 2 (fontified t)) . -121) (undo-tree-id48 . -2) 123) nil (23301 17802 515186 0) 0 nil]) ((120 . 123)) nil (23301 17802 515190 0) 0 nil]) ((110 . 120) (#("Red" 0 3 (fontified t)) . -110) (undo-tree-id49 . -3) 113) nil (23301 17802 515195 0) 0 nil]) ((108 . 113)) nil (23301 17802 515198 0) 0 nil]) ((107 . 108)) nil (23301 17802 515202 0) 0 nil]) ((#("	" 0 1 (fontified nil)) . 107) (107 . 108) (106 . 108)) nil (23301 17802 515207 0) 0 nil]) ((105 . 107) (#("{" 0 1 (fontified nil)) . -105) (104 . 106)) nil (23301 17802 515212 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -103) (undo-tree-id50 . -1) 104) nil (23301 17802 515219 0) 0 nil]) ((103 . 104)) nil (23301 17802 515222 0) 0 nil]) ((96 . 103) (#("Option" 0 6 (fontified t face font-lock-type-face)) . -96) (undo-tree-id51 . -6) 102) nil (23301 17802 515229 0) 0 nil]) ((96 . 102)) nil (23301 17802 515231 0) 0 nil]) ((#("p" 0 1 (fontified t face font-lock-type-face)) . -96) (undo-tree-id52 . -1) 97) nil (23301 17802 515239 0) 0 nil]) ((96 . 97)) nil (23301 17802 515243 0) 0 nil]) ((#("o" 0 1 (fontified t face font-lock-type-face)) . -96) (undo-tree-id53 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -97) (undo-tree-id54 . -1) (#("p" 0 1 (fontified t face font-lock-type-face)) . -98) (undo-tree-id55 . -1) 99) nil (23301 17802 515256 0) 0 nil]) ((81 . 99)) nil (23301 17802 515261 0) 0 nil]) ((80 . 81)) nil (23301 17802 515264 0) 0 nil]) ((#("Option" 0 6 (fontified t face font-lock-type-face)) . 80) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6)) nil (23301 17802 515272 0) 0 nil]) ((#("s" 0 1 (fontified t face font-lock-type-face)) . -86) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 87) nil (23301 17802 515283 0) 0 nil]) ((80 . 87) (#("option" 0 6 (fontified t face font-lock-type-face)) . -80) (undo-tree-id64 . -6) 86) nil (23301 17802 515291 0) 0 nil]) ((80 . 86) (79 . 81) (#("(" 0 1 (fontified nil)) . -79) (78 . 80)) nil (23301 17802 515296 0) 0 nil]) ((71 . 78) (#("Option" 0 6 (fontified t face font-lock-type-face)) . -71) (undo-tree-id65 . -6) 77) nil (23301 17802 515303 0) 0 nil]) ((71 . 77)) nil (23301 17802 515307 0) 0 nil]) ((70 . 71)) nil (23301 17802 515313 0) 0 nil]) ((#(" " 0 1 (fontified t)) . -69) (undo-tree-id66 . -1) 70) nil (23301 17802 515320 0) 0 nil]) ((61 . 70) (60 . 62) (#("(" 0 1 (fontified nil)) . -60) (55 . 61)) nil (23301 17802 515325 0) 0 nil]) ((53 . 55)) nil (23301 17802 515326 0) 0 nil]) ((41 . 51) (#("Re" 0 2 (fontified t)) . -41) (undo-tree-id67 . -2) 43) nil (23301 17802 515333 0) 0 nil]) ((40 . 43)) nil (23301 17802 515337 0) 0 nil]) ((39 . 40)) nil (23301 17802 515340 0) 0 nil]) ((#("	" 0 1 (fontified nil)) . 39) (39 . 40) (38 . 40)) nil (23301 17802 515346 0) 0 nil]) ((37 . 39) (#("{" 0 1 (fontified nil)) . -37) (32 . 38)) nil (23301 17802 515348 0) 0 nil]) ((#("i" 0 1 (fontified t face font-lock-type-face)) . -32) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("c" 0 1 (fontified t face font-lock-type-face)) . -33) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("t" 0 1 (fontified t face font-lock-type-face)) . -34) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#(" " 0 1 (fontified t)) . -35) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 36) nil (23301 17802 515396 0) 0 nil]) ((29 . 36)) nil (23301 17802 515399 0) 0 nil]) ((21 . 29)) nil (23301 17802 515403 0) 0 nil]) ((#("r" 0 1 (fontified t)) . -21) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#(" " 0 1 (fontified t)) . -22) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 23) nil (23301 17802 515413 0) 0 nil]) ((20 . 23)) nil (23301 17802 515417 0) 0 nil]) ((#("o" 0 1 (fontified t)) . -20) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("e" 0 1 (fontified t)) . -21) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (#(" " 0 1 (fontified t)) . -22) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("t" 0 1 (fontified t)) . -23) (undo-tree-id86 . -1) 24) nil (23301 17802 515438 0) 0 nil]) ((18 . 24)) nil (23301 17802 515442 0) 0 nil]) ((16 . 18)) nil (23301 17802 515446 0) 0 nil]) ((#("var st" 0 3 (fontified t) 3 6 (fontified t)) . -16) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) 22) nil (23301 17802 515461 0) 0 nil] [nil nil ((9 . 22) (#("session" 0 7 (fontified t)) . -9) (undo-tree-id0 . -7) (undo-tree-id1 . -7) (undo-tree-id2 . -7) (undo-tree-id3 . -7) (undo-tree-id4 . -7) (undo-tree-id5 . -7) 16) ((9 . 16) (#("sessionExpire" 0 13 (fontified t)) . 9) (undo-tree-id17 . -13) (undo-tree-id18 . -13)) (23301 17708 292675 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -16) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 17) nil (23301 17708 292935 0) 0 nil]) ((#("s" 0 1 (fontified t)) . -17) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -1) 18) nil (23301 17708 292691 0) 0 nil]) ((17 . 18)) nil (23301 17708 292693 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -17) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) 18) nil (23301 17708 292697 0) 0 nil]) ((18 . 24)) nil (23301 17708 292699 0) 0 nil]) ((16 . 18)) nil (23301 17708 292700 0) 0 nil]) ((1 . 16) (t . -1)) nil (23301 17708 292702 0) 0 nil]) nil nil (23301 17708 292710 0) 0 nil] #1# 3168 76 nil]