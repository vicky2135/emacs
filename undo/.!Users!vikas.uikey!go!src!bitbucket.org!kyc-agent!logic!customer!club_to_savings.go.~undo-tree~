"e2019599029b1af9a5d197239551b87fa175e0c3"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((786 . 791)) nil (23298 45397 911217 0) 0 nil]) ((784 . 786)) nil (23298 45397 911317 0) 0 nil]) ((783 . 784)) nil (23298 45397 911346 0) 0 nil]) ((#("	uploadingErr := " 0 1 (fontified t face whitespace-tab) 1 17 (fontified t)) . 783) (undo-tree-id16 . -17) (undo-tree-id17 . -17)) nil (23298 45397 911378 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -860) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 861) nil (23298 45397 911390 0) 0 nil]) ((#("	if uploadingErr != nil {
		return uploadingErr
	}

	return nil" 0 1 (fontified t face whitespace-tab) 1 3 (fontified t face font-lock-keyword-face) 3 20 (fontified t) 20 23 (fontified t face font-lock-constant-face) 23 26 (fontified t) 26 28 (fontified t face whitespace-tab) 28 34 (fontified t face font-lock-keyword-face) 34 48 (fontified t) 48 49 (fontified t face whitespace-tab) 49 52 (fontified t) 52 53 (fontified t face whitespace-tab) 53 59 (fontified t face font-lock-keyword-face) 59 60 (fontified t) 60 63 (fontified t face font-lock-constant-face)) . -861) (undo-tree-id21 . -51) (undo-tree-id22 . -63) (undo-tree-id23 . -63) 924) nil (23298 45397 911401 0) 0 nil]) ((#("w" 0 1 (fontified t face font-lock-comment-face)) . -782) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) 783 (t 23298 45312 731357 567000)) nil (23298 45397 911418 0) 0 nil]) ((1559 . 1570) (#("Astin" 0 5 (fontified t face (-1 font-lock-type-face))) . -1559) (undo-tree-id0 . -5) 1564) nil (23298 45312 727138 0) 0 nil]) ((1561 . 1564)) nil (23298 45312 727146 0) 0 nil]) ((1557 . 1561)) nil (23298 45312 727151 0) 0 nil]) ((#("." 0 1 (fontified t face (-1))) . -1557) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 1558) nil (23298 45312 727162 0) 0 nil]) ((1553 . 1558)) nil (23298 45312 727166 0) 0 nil]) ((#("a" 0 1 (fontified t face (-1 font-lock-type-face))) . -1553) (undo-tree-id3 . -1) 1554) nil (23298 45312 727173 0) 0 nil]) ((1538 . 1554)) nil (23298 45312 727175 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1567) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("
" 0 1 (fontified t)) . -1568) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 1569) nil (23298 45312 727201 0) 0 nil]) ((#("	// fetch astina cache to get email and mobile number of customer
	astinaCache, astinaCacheErr := utils.ReadCustomerCache(requestId, request.OVOID)
	if astinaCacheErr != nil {
		// fail to read astina cache from redis cache store
		return astinaCacheErr
	}" 0 1 (fontified t face whitespace-tab) 1 4 (fontified t face font-lock-comment-delimiter-face) 4 66 (fontified t face font-lock-comment-face) 66 67 (fontified t face whitespace-tab) 67 104 (fontified t) 104 121 (fontified t face font-lock-function-name-face) 121 143 (fontified t) 143 147 (fontified t face (-1)) 147 148 (fontified t) 148 149 (fontified t face whitespace-tab) 149 151 (fontified t face font-lock-keyword-face) 151 170 (fontified t) 170 173 (fontified t face font-lock-constant-face) 173 176 (fontified t) 176 178 (fontified t face whitespace-tab) 178 181 (fontified t face font-lock-comment-delimiter-face) 181 230 (fontified t face font-lock-comment-face) 230 232 (fontified t face whitespace-tab) 232 238 (fontified t face font-lock-keyword-face) 238 254 (fontified t) 254 255 (fontified t face whitespace-tab) 255 256 (fontified t)) . 1569) (undo-tree-id12 . -256) (undo-tree-id13 . -204) (undo-tree-id14 . -204) (undo-tree-id15 . -256) (t 23298 40038 346505 929000)) nil (23298 45312 727214 0) 0 nil]) nil nil (23298 45312 727217 0) 0 nil] #1# 795 16 nil]