"a0f55e49d47de9307dec479e92a08d909f8e1c1a"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil nil ((#("
" 0 1 (fontified t)) . -793) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) 794) nil (23298 45368 809542 0) 0 nil]) ((#("	if uploadingErr != nil {
		return uploadingErr
	}

	return nil" 0 1 (fontified t face whitespace-tab) 1 3 (fontified t face font-lock-keyword-face) 3 20 (fontified t) 20 23 (fontified t face font-lock-constant-face) 23 26 (fontified t) 26 28 (fontified t face whitespace-tab) 28 34 (fontified t face font-lock-keyword-face) 34 48 (fontified t) 48 49 (fontified t face whitespace-tab) 49 52 (fontified t) 52 53 (fontified t face whitespace-tab) 53 59 (fontified t face font-lock-keyword-face) 59 60 (fontified t) 60 63 (fontified t face font-lock-constant-face)) . -794) (undo-tree-id69 . -63) (undo-tree-id70 . -1) (undo-tree-id71 . -25) (undo-tree-id72 . -63) (undo-tree-id73 . -51) (undo-tree-id74 . -54) (undo-tree-id75 . -63) 857) nil (23298 45368 809583 0) 0 nil]) ((726 . 733)) nil (23298 45368 809590 0) 0 nil]) ((725 . 726)) nil (23298 45368 809595 0) 0 nil]) ((#("	uploadingErr := " 0 1 (fontified t face whitespace-tab) 1 17 (fontified t)) . 725) (undo-tree-id76 . -17) (undo-tree-id77 . -17) (t 23298 45355 152348 429000)) nil (23298 45368 809609 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1342) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) 1343 (t 23298 45354 219378 991000)) nil (23298 45355 148817 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1420) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("
" 0 1 (fontified t)) . -1421) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) 1422) nil (23298 45354 216342 0) 0 nil]) ((#("	if reportupdateErr != nil {
		return reportupdateErr
	}

	return nil" 0 1 (fontified t face whitespace-tab) 1 3 (fontified t face font-lock-keyword-face) 3 23 (fontified t) 23 26 (fontified t face font-lock-constant-face) 26 29 (fontified t) 29 31 (fontified t face whitespace-tab) 31 37 (fontified t face font-lock-keyword-face) 37 54 (fontified t) 54 55 (fontified t face whitespace-tab) 55 58 (fontified t) 58 59 (fontified t face whitespace-tab) 59 65 (fontified t face font-lock-keyword-face) 65 66 (fontified t) 66 69 (fontified t face font-lock-constant-face)) . -1422) (undo-tree-id44 . -69) (undo-tree-id45 . -1) (undo-tree-id46 . -28) (undo-tree-id47 . -69) (undo-tree-id48 . -60) (undo-tree-id49 . -69) 1491) nil (23298 45354 216364 0) 0 nil]) ((1345 . 1352)) nil (23298 45354 216369 0) 0 nil]) ((1344 . 1345)) nil (23298 45354 216372 0) 0 nil]) ((#("	reportupdateErr := " 0 1 (fontified t face whitespace-tab) 1 20 (fontified t)) . 1344) (undo-tree-id50 . -20) (undo-tree-id51 . -20)) nil (23298 45354 216380 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1343) (undo-tree-id52 . -1) (undo-tree-id53 . -1) 1344) nil (23298 45354 216388 0) 0 nil]) ((#("	//update agent report" 0 1 (fontified t face whitespace-tab) 1 3 (fontified t face font-lock-comment-delimiter-face) 3 22 (fontified t face font-lock-comment-face)) . 1344) (undo-tree-id54 . -22) (undo-tree-id55 . -22)) nil (23298 45354 216396 0) 0 nil]) ((1456 . 1457) (t 23298 45333 567571 581000)) nil (23298 45354 216401 0) 0 nil]) ((#("
" 0 1 (fontified t)) . -1343) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (#("
" 0 1 (fontified t)) . -1344) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 1345) nil (23298 45333 563973 0) 0 nil]) ((#("	" 0 1 (fontified t face whitespace-tab)) . -1344) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (#("/" 0 1 (fontified t)) . -1345) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("/ fetch astina cache to get email and mobile number of customer
	astinaCache, astinaCacheErr := utils.ReadCustomerCache(requestId, request.OVOID)
	if astinaCacheErr != nil {
		// fail to read astina cache from redis cache store
		return astinaCacheErr
	}" 0 2 (fontified t face font-lock-comment-delimiter-face) 2 64 (fontified t face font-lock-comment-face) 64 65 (fontified t face whitespace-tab) 65 102 (fontified t) 102 119 (fontified t face font-lock-function-name-face) 119 141 (fontified t) 141 145 (fontified t face (-1)) 145 146 (fontified t) 146 147 (fontified t face whitespace-tab) 147 149 (fontified t face font-lock-keyword-face) 149 168 (fontified t) 168 171 (fontified t face font-lock-constant-face) 171 174 (fontified t) 174 176 (fontified t face whitespace-tab) 176 179 (fontified t face font-lock-comment-delimiter-face) 179 228 (fontified t face font-lock-comment-face) 228 230 (fontified t face whitespace-tab) 230 236 (fontified t face font-lock-keyword-face) 236 252 (fontified t) 252 253 (fontified t face whitespace-tab) 253 254 (fontified t)) . -1346) (undo-tree-id23 . -254) (undo-tree-id24 . -254) (undo-tree-id25 . 1) (undo-tree-id26 . -254) (undo-tree-id27 . 82) (undo-tree-id28 . -173) 1600 (t 23298 44966 679685 670000)) nil (23298 45333 564015 0) 0 nil]) ((1300 . 1301) (t 23298 44963 202497 243000)) nil (23298 44966 677003 0) 0 nil]) ((1301 . 1312) (#("AstinaCa" 0 8 (fontified t face (-1 font-lock-type-face))) . -1301) (undo-tree-id0 . -8) (undo-tree-id1 . -8) 1309) nil (23298 44963 198961 0) 0 nil]) ((1307 . 1309)) nil (23298 44963 198969 0) 0 nil]) ((1301 . 1307) (#("Ast" 0 3 (fontified t face (-1 font-lock-type-face))) . -1301) (undo-tree-id2 . -3) 1304) nil (23298 44963 198976 0) 0 nil]) ((1298 . 1304)) nil (23298 44963 198981 0) 0 nil]) ((#("o" 0 1 (fontified t face (-1 font-lock-type-face))) . -1298) (undo-tree-id3 . -1) (#("i" 0 1 (fontified t face (-1 font-lock-type-face))) . -1299) (undo-tree-id4 . -1) 1300) nil (23298 44963 198991 0) 0 nil]) ((1296 . 1300)) nil (23298 44963 198995 0) 0 nil]) ((#("a" 0 1 (fontified t face (-1 font-lock-type-face))) . -1296) (undo-tree-id5 . -1) 1297) nil (23298 44963 199000 0) 0 nil]) ((1294 . 1297)) nil (23298 44963 199004 0) 0 nil]) ((1283 . 1294) (#("astina" 0 6 (fontified t face (-1))) . -1283) (undo-tree-id6 . -6) 1289) nil (23298 44963 199009 0) 0 nil]) ((1281 . 1289) (t 23298 40016 127794 154000)) nil (23298 44963 199012 0) 0 nil]) nil nil (23298 44963 199015 0) 0 nil] #1# 1530 27 nil]