package agent

import (
	"bitbucket.org/kyc-agent/exceptions"
	"github.com/gin-contrib/sessions"
	"bitbucket.org/kyc-agent/common/logger"
	"github.com/gin-gonic/gin"
)

const(
	getAgentIDFromSession = "logic:agent:GetAgentIDFromSession"
	getAgentNameFromSession = "logic:agent:GetAgentNameFromSession"
)

//fetching id from session data
func GetAgentIDFromSession(ctx *gin.Context, requestID string) (string, *exceptions.ErrorResponse){
	getAgentIDError := &exceptions.ErrorResponse{}

	agentID, ok := sessions.Default(ctx).Get("id").(string)
	if !ok {
		logger.Info(getAgentIDFromSession, "error fetching agent id, requestID: %s", requestID)
		getAgentIDError.Build(exceptions.SessionReadErrCode)
		return "", getAgentIDError
	}
	return agentID, nil
}

//fetching name from session data
func GetAgentNameFromSession(ctx *gin.Context, requestID string) (string, *exceptions.ErrorResponse){
	getAgentNameError := &exceptions.ErrorResponse{}

	agentName, ok := sessions.Default(ctx).Get("name").(string)
	if !ok {
		logger.Info(getAgentNameFromSession, "error fetching agent name requestID: %s", requestID)
		getAgentNameError.Build(exceptions.SessionReadErrCode)
		return "", getAgentNameError
	}
	return agentName, nil
}