package users

import (
	"fmt"
	"gitlab.com/vicky2135/stories/commons/lameDB"
	"log"
	"time"
)

func (u *User) Save() error {

	db, err := lameDB.GetDB()

	if err != nil {
		return fmt.Errorf("error saving user", err)
	}

	query := insertQuery()
	insStmt, prepErr := db.Prepare(query)

	if prepErr != nil {
		return fmt.Errorf("error saving user", err)
	}

	timeNow := time.Now()

	result, execErr := insStmt.Exec(u.Email)

	if execErr != nil {
		return fmt.Errorf("error saving user", execErr)
	}

	id, insErr := result.LastInsertId()

	if insErr != nil {
		return fmt.Errorf("error saving user", insErr)
	}

	// set user object
	u.ID = id
	u.CreatedAt = timeNow
	u.UpdatedAt = timeNow
	return nil
}

func (u *User) FindByEmail() ([]*User, error) {
	db, err := lameDB.GetDB()

	if err != nil {
		return nil, fmt.Errorf("error finding user", err)
	}

	query := findBy("email")
	log.Print(query)
	stmt, prepErr := db.Prepare(query)

	if prepErr != nil {
		return nil, fmt.Errorf("error finding user", prepErr)
	}
	rows, readErr := stmt.Query(u.Mobile)

	if readErr != nil {
		return nil, fmt.Errorf("error finding user", readErr)
	}

	var users []*User
	for rows.Next() {
		usr := new(User)
		err := rows.Scan(
			&usr.ID,
			&usr.Name,
			&usr.Mobile,
			&usr.Email,
			&usr.IsMobileVerified,
			&usr.IsEmailVerified,
			&usr.IsLoggedIn,
			&usr.CreatedAt,
			&usr.UpdatedAt,
		)
		if err != nil {
			return nil, fmt.Errorf("error finding user", err)
		}

		users = append(users, usr)
	}

	return users, nil
}

func (u *User) FindByMobile() ([]*User, error) {
	db, err := lameDB.GetDB()

	if err != nil {
		return nil, fmt.Errorf("error finding user", err)
	}

	query := findBy("mobile")

	stmt, prepErr := db.Prepare(query)

	if prepErr != nil {
		return nil, fmt.Errorf("error finding user", prepErr)
	}
	rows, readErr := stmt.Query(u.Mobile)

	if readErr != nil {
		return nil, fmt.Errorf("error finding user", readErr)
	}

	var users []*User
	for rows.Next() {
		usr := new(User)
		err := rows.Scan(
			&usr.ID,
			&usr.Name,
			&usr.Mobile,
			&usr.Email,
			&usr.IsMobileVerified,
			&usr.IsEmailVerified,
			&usr.IsLoggedIn,
			&usr.CreatedAt,
			&usr.UpdatedAt,
		)

		if err != nil {
			return nil, fmt.Errorf("error finding user", err)
		}

		users = append(users, usr)
	}

	return users, nil
}
